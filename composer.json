{
    "name": "zendframework/zend-expressive-helpers",
    "description": "Helper/Utility classes for Expressive",
    "license": "BSD-3-Clause",
    "keywords": [
        "expressive",
        "http",
        "middleware",
        "psr",
        "psr-7",
        "zf",
        "zendframework",
        "zend-expressive"
    ],
    "support": {
        "issues": "https://github.com/zendframework/zend-expressive-helpers/issues",
        "source": "https://github.com/zendframework/zend-expressive-helpers",
        "rss": "https://github.com/zendframework/zend-expressive-helpers/releases.atom",
        "slack": "https://zendframework-slack.herokuapp.com",
        "forum": "https://discourse.zendframework.com/c/questions/expressive"
    },
    "require": {
        "php": "^5.6 || ^7.0",
        "psr/container": "^1.0",
        "psr/http-message": "^1.0.1",
        "webimpress/http-middleware-compatibility": "^0.1.1",
        "zendframework/zend-expressive-router": "^2.2"
    },
    "require-dev": {
        "malukenho/docheader": "^0.1.5",
        "mockery/mockery": "^1.0",
        "phpunit/phpunit": "^5.7.23 || ^6.5.3",
        "zendframework/zend-coding-standard": "~1.0.0",
        "zendframework/zend-diactoros": "^1.3.10"
    },
    "suggest": {
        "mouf/pimple-interop": "^1.0 to use Pimple for dependency injection",
        "aura/di": "^3.2 to make use of Aura.Di dependency injection container",
        "zendframework/zend-servicemanager": "^3.3 to use zend-servicemanager for dependency injection"
    },
    "autoload": {
        "psr-4": {
            "Zend\\Expressive\\Helper\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "ZendTest\\Expressive\\Helper\\": "test/"
        }
    },
    "config": {
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-master": "4.2.x-dev",
            "dev-develop": "4.3.x-dev",
            "dev-release-5.0.0": "5.0.x-dev"
        }
    },
    "scripts": {
        "check": [
            "@license-check",
            "@cs-check",
            "@test"
        ],
        "cs-check": "phpcs",
        "cs-fix": "phpcbf",
        "test": "phpunit --colors=always",
        "test-coverage": "phpunit --colors=always --coverage-clover clover.xml",
        "license-check": "docheader check src/ test/"
    }
}
